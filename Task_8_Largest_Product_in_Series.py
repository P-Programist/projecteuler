# COULD NOT COPE
import numpy,math

unreal_big_number = '7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450'
number_in_list = []
count = 0 
result = 0


for sep_digit in unreal_big_number:
	number_in_list.append(int(sep_digit))

while count < len(number_in_list)/5:
	# This fucking variable becomes equal to 1 EVERY single iteration
	mult1 = 1
	for digit in number_in_list[count:count + 13]:
		mult1 *= digit

		if result < mult1:
			result = mult1
	count += 1

# print(result)



L = []
L.append("73167176531330624919225119674426574742355349194934")
L.append("96983520312774506326239578318016984801869478851843")
L.append("85861560789112949495459501737958331952853208805511")
L.append("12540698747158523863050715693290963295227443043557")
L.append("66896648950445244523161731856403098711121722383113")
L.append("62229893423380308135336276614282806444486645238749")
L.append("30358907296290491560440772390713810515859307960866")
L.append("70172427121883998797908792274921901699720888093776")
L.append("65727333001053367881220235421809751254540594752243")
L.append("52584907711670556013604839586446706324415722155397")
L.append("53697817977846174064955149290862569321978468622482")
L.append("83972241375657056057490261407972968652414535100474")
L.append("82166370484403199890008895243450658541227588666881")
L.append("16427171479924442928230863465674813919123162824586")
L.append("17866458359124566529476545682848912883142607690042")
L.append("24219022671055626321111109370544217506941658960408")
L.append("07198403850962455444362981230987879927244284909188")
L.append("84580156166097919133875499200524063689912560717606") 
L.append("05886116467109405077541002256983155200055935729725")
L.append("71636269561882670428252483600823257530420752963450")


M = []

for s in L:
    for i in list(s): 
    	M.append(i)

greatest_product = 0

for i in range(len(M)):
	
	product = 1
	# Multiplies each number in list to each other
	substring = M[i:i+13]
	# print(substring)
	for digit in substring: 
		product *= int(digit)
		# print(product)
		if product > greatest_product:
			greatest_product = product

print (greatest_product)



# a = [int(i) for i in unreal_big_number]

# b, S, N, i = [], 1, 0, 0

# while i < len(a):
#     N += 1
#     S *= a[i]

#     if N == 13:
#         b.append(S)
#         S = 1
#         i -= 11
#         N = 0

#     else:
#         i += 1

# b.append(S)

# print(max(b))